openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Chaw api server'
  description: 'Chaw api server 1'
servers:
  - url: http://localhost:5000/
    description: "Chaw api server 1"
components:
  securitySchemes:
    cookieAuth:        
      type: apiKey
      in: cookie
      name: userJwt
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
        university:
          type: string
paths:
  /api/users/signup:
    post:
      summary: 회원가입
      description: 이름, 이메일, 패스워드, 패스워드 확인, 대학정보 입력
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: "message: Email in use, 이미 존재하는 유저일 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items: 
                      type: object
                      properties:
                        message:
                          type: string
  
  /api/users/signin:
    post:
      summary: 로그인
      description: 이메일, 패스워드 입력
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  password:
                    type: string
        400:
          description: "message: Invalid credentials, 이미 존재하는 유저일 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items: 
                      type: object
                      properties:
                        message:
                          type: string
        400-1(400):
          description: "message: Password is not matched, 패스워드가 틀린 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items: 
                      type: object
                      properties:
                        message:
                          type: string

  /api/users/signout:
    post:
      summary: 로그아웃
      description: api 보내면 세션 & 쿠키 만료

  /api/users/currentUser:
    post:
      summary: 로그인 된 유저 정보 가져오기
      description: api 보내면 로그인 된 유저의 id, email, isAdmin(관리자 여부) 가져올 수 있음

  /api/users/forgotPassword:
    post:
      summary: 비밀 번호 잊었을 때 비밀 번호 재설정을 할 수 있는 메일 발송
      description: 이메일을 입력하면 사용자에게 비밀번호 재설정 페이지 URL을 담은 메일 전송, response로 resetToken 제공
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        200:
          description: 비밀 번호 잊었을 때 비밀 번호를 재설정할 수 있는 메일 전송 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resetToken:
                    type: string
        400:
          description: "message: user not found, 작성한 이메일이 가입된 이메일이 아닌 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items: 
                      type: object
                      properties:
                        message:
                          type: string

  /api/users/resetPassword/:resetToken:
    post:
      summary: 비밀번호 리셋하기
      description: forgotPassword api에서 response로 받은 resetToken을 parameter로 받아 유저 확인 후 비밀번호 재설정 
      parameters:
        - in: path
          name: resetToken
          required: true
          description: forgotPassword api에서 response로 받은 resetToken
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        200:
          description: 비밀번호 리셋 성공
        400:
          description: "message: Token is invalid or has expired, forgotPassowrd를 통해 토큰이 발행되지 않았거나 토큰이 만료된 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items: 
                      type: object
                      properties:
                        message:
                          type: string

  /api/users/send-email:
    post:
      summary: 웹메일 인증 메일 보내기
      description: api 호출 시 6자리 난수를 생성하여 웹메일에 전송
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string

      responses:
        200:
          description: 웹메일 인증 번호 전송 성공, number는 인증번호
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      number:
                        type: string
                      email:
                        type: string
        400:
          description: "message: Mail cant't send, 메일이 발송되지 않을 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items: 
                      type: object
                      properties:
                        message:
                          type: string


  /api/users/updatePassword:
    post:
      summary: 비밀번호 재설정
      description: 현재 비밀번호, 변경할 비밀번호, 변경할 비밀번호 확인 받아서 비밀번호 재설정, 로그인 상태에만 변경 가능
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                passwordCurrent:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        200:
          description: 비밀번호 변경 성공
        401:
          description: "message: NotAuthorizedError, 현재 비밀번호(passwordCurrent)가 맞지 않는 경우"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items: 
                      type: object
                      properties:
                        message:
                          type: string




                  



                
